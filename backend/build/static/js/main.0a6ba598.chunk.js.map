{"version":3,"sources":["stores/UseStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","diasabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UseStore","resetForm","alert","msg","console","log","setInputValue","disabled","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a6ba598.chunk.js","sourcesContent":["import { extendObservable } from 'mobx'\r\n\r\nclass UseStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UseStore();","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n          className='input'\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n\r\n        <button\r\n          className='btn'\r\n          diasabled={this.props.diasabled}\r\n          onClick={() => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SubmitButton;\r\n ","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UseStore from './stores/UseStore';\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UseStore.isLoggedIn = true;\r\n        UseStore.username = result.username;\r\n\r\n      }\r\n      else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Logowanie\r\n        <InputField\r\n          type='text'\r\n          placeholder='Username'\r\n          value={this.state.username ? this.state.username : ''}\r\n          onChange={(val) => this.setInputValue('username', val)}\r\n        />\r\n\r\n        <InputField\r\n          type='password'\r\n          placeholder='Password'\r\n          value={this.state.password ? this.state.password : ''}\r\n          onChange={(val) => this.setInputValue('password', val)}\r\n        />\r\n        <SubmitButton\r\n          text='Zaloguj siÄ™'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={ () => this.doLogin() }\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UseStore from './stores/UseStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n  async componentDidMount() {\n\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'aplication/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UseStore.loading = false;\n        UseStore.isLoggedIn = true;\n        UseStore.username = result.username;\n\n      }\n\n      else {\n        UseStore.loading = false;\n        UseStore.isLoggedIn = false;\n      }\n    }\n    catch (e) {\n      UseStore.loading = false;\n      UseStore.isLoggedIn = false;\n\n    }\n  }\n\n  async doLogout() {\n\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'aplication/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UseStore.isLoggedIn = false;\n        UseStore.username = '';\n        UseStore.username = result.username;\n\n      }\n      else {\n        UseStore.loading = false;\n        UseStore.isLoggedIn = false;\n      }\n\n    }\n    catch (e) {\n      console.log(e)\n\n    }\n  }\n\n  render() {\n\n    if (UseStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            Loading, please wait..\n          </div>\n        </div>\n      );\n    }\n\n    else {\n\n      if (UseStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UseStore.username}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={() => this.doLogout()}\n              />\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            <LoginForm />\n          </div>\n        </div>\n      );\n    }\n  }\n\n}\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}